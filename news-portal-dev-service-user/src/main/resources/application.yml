############################################################
#
# 用户微服务
# web访问端口号  约定：8003
#
############################################################
server:
#  port: 8003
  tomcat:
    uri-encoding: UTF-8
    max-swallow-size: -1  # tomcat默认大小2M，超过2M的文件不会被捕获，需要调整此处大小为100MB或者-1即可

############################################################
#
# 配置项目信息
#
############################################################
spring:
  profiles:
    active: dev  #yml配置文件的环境配置，dev：开发环境，test：测试环境，prod：生产环境
  application:
    name: service-user
  datasource:                                         # 数据源的相关配置
    type: com.zaxxer.hikari.HikariDataSource          # 数据源类型：HikariCP
    driver-class-name: com.mysql.jdbc.Driver          # mysql驱动
    url: jdbc:mysql://localhost:3306/news-portal-dev?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
    username: root
    password: XH367Keah9qKdlvp
    hikari:
      connection-timeout: 30000       # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 默认:30秒
      minimum-idle: 5                 # 最小连接数
      maximum-pool-size: 20           # 最大连接数
      auto-commit: true               # 自动提交
      idle-timeout: 600000            # 连接超时的最大时长（毫秒），超时则被释放（retired），默认:10分钟
      pool-name: DateSourceHikariCP     # 连接池名字
      max-lifetime: 1800000           # 连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认:30分钟 1800000ms
      connection-test-query: SELECT 1
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  rabbitmq:
    host: 192.168.137.103
    port: 5672
    username: ztyadmin
    password: UQZDAt3APUAg
    virtual-host: inews-dev
  data:
    elasticsearch:
      cluster-name: inews-elasticsearch
      cluster-nodes: 192.168.137.100:9300
  cloud:
    stream:
      bindings: # bind channel and exchangers
        myOutput: # provider's channel
          # Customize exchanger's name. Messages in the code will be passed to mq exchangers
          destination: streamExchange
        myInput: # consumer's channel
          # Customize exchanger's name. MQ passes message from provider to consumer
          destination: streamExchange
          group: girls
#  zipkin:
#    # Zipkin will send traces to following address
#    base-url: http://192.168.18.129:9411/
#    sender:
#      # Data type for sending collected traces
#      # web: http format
#      type: web
#  sleuth:
#    sampler:
#      probability: 1        #Precentage of data sampling, in range [0 - 1].

############################################################
#
# mybatis 配置
#
############################################################
mybatis:
  type-aliases-package: com.site.pojo          # 所有POJO类所在包路径
  mapper-locations: classpath:mapper/*.xml      # mapper映射文件

############################################################
#
# mybatis mapper 配置
#
############################################################
# 通用 Mapper 配置
mapper:
  mappers: com.site.my.mapper.MyMapper
  not-empty: false    # 在进行数据库操作的的时候，判断表达式 username != null, 是否追加 username != ''
  identity: MYSQL
# 分页插件配置
pagehelper:
  helperDialect: mysql
  supportMethodsArguments: true
############################################################
#
# eureka client configuration
#
############################################################
eureka:
  # Customized eureka server info
  server:
    hostname: eureka
    port: 7000
  client:
    # All microservice needs to register to eureka
    register-with-eureka: true
    # Get service from eureka registration center
    fetch-registry: true
    # Address of the registration center
    service-url:
#      defaultZone: http://${eureka.server.hostname}:${eureka.server.port}/eureka/
      defaultZone: http://eureka-cluster-7001:7001/eureka/,http://eureka-cluster-7002:7002/eureka/,http://eureka-cluster-7003:7003/eureka/
  instance:
    lease-renewal-interval-in-seconds: 3 # Time interval for adjust the connection of eureka client and registration center. default: 30s
    lease-expiration-duration-in-seconds: 5 # Waiting time from the last heartbeat beacon. Exclude the service if exceed this time. Default 90s

# Hystrix configuration
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 2000   # Set hystrix maximum waiting time. If exceed 2s hystrix will trigger callback method
      circuitBreaker:   # Circuit breaker configuration
        enabled: true
        requestVolumeThreshold: 10    # 触发熔断最小请求次数，默认：20
        sleepWindowInMilliseconds: 15000    # 熔断后过几秒后尝试半开状态（请求重试），默认：5s
        errorThresholdPercentage: 50  # 触发熔断的失败率(rate/threshold)，默认：50%