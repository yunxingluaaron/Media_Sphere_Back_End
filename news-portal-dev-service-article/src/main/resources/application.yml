############################################################
#
# Microservice of Article
# web port  Set as：8001
#
############################################################
server:
  tomcat:
    uri-encoding: UTF-8
    max-swallow-size: -1  # tomcat默认大小2M，超过2M的文件不会被捕获，需要调整此处大小为100MB或者-1即可

############################################################
#
# 配置项目信息
#
############################################################
spring:
  profiles:
    active: dev  #yml配置文件的环境配置，dev：开发环境，test：测试环境，prod：生产环境
  application:
    name: service-article
  datasource:                                         # 数据源的相关配置
    type: com.zaxxer.hikari.HikariDataSource          # 数据源类型：HikariCP
    driver-class-name: com.mysql.jdbc.Driver          # mysql驱动
    url: jdbc:mysql://localhost:3306/news-portal-dev?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
    username: root
    password: XH367Keah9qKdlvp
    hikari:
      connection-timeout: 30000       # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 默认:30秒
      minimum-idle: 5                 # 最小连接数
      maximum-pool-size: 20           # 最大连接数
      auto-commit: true               # 自动提交
      idle-timeout: 600000            # 连接超时的最大时长（毫秒），超时则被释放（retired），默认:10分钟
      pool-name: DateSourceHikariCP     # 连接池名字
      max-lifetime: 1800000           # 连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认:30分钟 1800000ms
      connection-test-query: SELECT 1
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  data:
    mongodb:
      uri: mongodb://root:lmqFYJk>5H26@LocalHost:27017
      database: news-portal
    elasticsearch:
      cluster-name: inews-elasticsearch
      cluster-nodes: 192.168.137.100:9300
  freemarker:
    charset: UTF-8
    content-type: text/html
    suffix: .ftl
    template-loader-path: classpath:/templates/
  rabbitmq:
    host: 192.168.137.103
    port: 5672
    username: ztyadmin
    password: UQZDAt3APUAg
    virtual-host: inews-dev
  cloud:
    stream:
      bindings:                             # bind channel and exchangers
        myOutput:                           # provider's channel
          # Customize exchanger's name. Messages in the code will be passed to mq exchangers
          destination: streamExchange
        myInput: # consumer's channel
          # Customize exchanger's name. MQ passes message from provider to consumer
          destination: streamExchange
          group: boys

#  zipkin:
#    # Zipkin will send traces to following address
#    base-url: http://192.168.18.129:9411/
#    sender:
#      # Data type for sending collected traces
#      # web: http format
#      type: web
#  sleuth:
#    sampler:
#      probability: 1        #Precentage of data sampling, in range [0 - 1].

############################################################
#
# mybatis 配置
#
############################################################
mybatis:
  type-aliases-package: com.site.pojo          # 所有POJO类所在包路径
  mapper-locations: classpath:mapper/*.xml      # mapper映射文件

############################################################
#
# mybatis mapper 配置
#
############################################################
# 通用 Mapper 配置
mapper:
  mappers: com.site.my.mapper.MyMapper
  not-empty: false    # 在进行数据库操作的的时候，判断表达式 username != null, 是否追加 username != ''
  identity: MYSQL
# 分页插件配置
pagehelper:
  helperDialect: mysql
  supportMethodsArguments: true
# Set the path of freemarker generated static html
freemarker:
  html:
    target: C:\Users\ztyam\OneDrive - University of Florida\1_Projects\news-portal\news-portal-dev\workspace\freemarker_html
    article: C:\Users\ztyam\Documents\Tools\apache-tomcat-10.0.2\webapps\news-portal\portal\a

############################################################
#
# eureka client configuration
#
############################################################
eureka:
  # Customized eureka server info
  server:
    hostname: eureka
    port: 7000
  client:
    # All microservice needs to register to eureka
    register-with-eureka: true
    # Get service from eureka registration center
    fetch-registry: true
    # Address of the registration center
    service-url:
#      defaultZone: http://${eureka.server.hostname}:${eureka.server.port}/eureka/
      defaultZone:  http://eureka-cluster-7001:7001/eureka/,http://eureka-cluster-7002:7002/eureka/,http://eureka-cluster-7003:7003/eureka/
  instance:
    lease-renewal-interval-in-seconds: 3 # Time interval for adjust the connection of eureka client and registration center. default: 30s
    lease-expiration-duration-in-seconds: 5 # Waiting time from the last heartbeat beacon. Exclude the service if exceed this time. Default 90s

# Custom ribbon configuration
#service-user:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

ribbon:
  ConnectTimeout: 5000          # 创建连接的超时时间，单位：ms
  ReadTimeout: 5000             # 在连接创建好以后，调用接口的超时时间，单位：ms
  MaxAutoRetries: 1             # 最大重试次数
  MaxAutoRetriesNextServer: 2   # 切换到下个实例的重试次数
  # 当请求到某个微服务5s，超时后会进行重试，先重新连接自己当前这个实例，
  # 如果当前实例失败1次后，会切换访问集群中的下一个微服务实例，切换最大2次

logging:
  level:
    com.site.api.controller.user.UserControllerApi: debug
#    root: debug

# feign configuration
feign:
#  circuitbreaker:
#    enabled: true  # enable hystrix inside the feign
  client:
    config:
      # Name of service provider
      service-user:
        loggerLevel: FULL
  hystrix:
    enabled: true # enable hystrix inside the feign
